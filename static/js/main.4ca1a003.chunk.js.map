{"version":3,"sources":["Place.js","Map.js","Places.js","App.js","serviceWorker.js","index.js"],"names":["Place","react_default","a","createElement","className","href","this","props","venue","name","React","Component","Map","loadMap","_this","loadscript","window","initMap","map","google","maps","document","getElementById","center","lat","lng","zoom","origin","Marker","position","label","bounds","LatLngBounds","infowindow","InfoWindow","labels","venues","i","marker","location","length","directions","address","contentString","formattedAddress","event","addListener","setContent","open","setZoom","setCenter","getPosition","extend","fitBounds","url","index","getElementsByTagName","script","src","async","defer","parentNode","insertBefore","id","nextProps","nextState","update","locations","Places","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","preventDefault","setState","getVenues","state","query","getNearby","handleChange","console","log","target","value","getLocation","navigator","geolocation","getCurrentPosition","response","coords","latlong","latitude","longitude","params","client_id","client_secret","ll","v","limit","openNow","axios","get","URLSearchParams","then","data","groups","items","logLocations","isMap","opennow","key","radius","type","concat","_this2","onSubmit","onClick","menu","placeholder","onChange","autoFocus","src_Place","src_Map","App","loadScript","link","rel","src_Places","Boolean","hostname","match","ReactDOM","render","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ca1a003.chunk.js","sourcesContent":["import React from \"react\"\r\n//import axios from \"axios\"\r\n\r\nclass Place extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Places\">\r\n                <a href=\"javascript:void(0)\">{this.props.venue.name}</a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //used later for directions\r\n    /*getDirections=()=>{\r\n        var endpoint=\"https://maps.googleapis.com/maps/api/directions/json?\"\r\n        var params={\r\n            key:\"AIzaSyCn5XAF4sSSjnjEVvWd8yB-nAyG8YOIb0o\",\r\n            origin: \"\" + this.props.lat + \",\" + this.props.lng,\r\n            destination:\"\" + this.props.venue.location.lat + \", \" + this.props.venue.location.lng,\r\n            travelMode: 'DRIVING',\r\n            headers: {\r\n                AccessControlAllowOrigin: '*',\r\n                AccessControlAllowMethods: 'GET'\r\n            }\r\n        }\r\n        axios.get(endpoint + new URLSearchParams(params),{\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response.data.routes[0].legs[0])\r\n        })\r\n    }*/\r\n}\r\n\r\nexport default Place","import React from \"react\"\r\n\r\nclass Map extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div id=\"map\"> </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadMap()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        var update = false\r\n        if(nextProps.locations !== this.props.locations){ \r\n            update = true\r\n            this.loadMap()\r\n        } else { \r\n            update = false }\r\n        return update\r\n    }\r\n    \r\n    loadMap=()=>{\r\n        this.loadscript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCn5XAF4sSSjnjEVvWd8yB-nAyG8YOIb0o&callback=initMap\")\r\n        window.initMap = this.initMap\r\n    }\r\n    //\"41.7658923, -72.672725\" 777 Main Street\r\n    \r\n    initMap=()=> {\r\n        var map = new window.google.maps.Map(document.getElementById('map'), {\r\n            center: {lat: this.props.lat, lng: this.props.lng},\r\n            zoom: 16\r\n        })\r\n\r\n        var marker = new window.google.maps.Marker({\r\n            position: {lat: this.props.lat, lng: this.props.lng}, map: map, \r\n            label: \"You\"\r\n        })\r\n        var origin = this.props.lat + \",\"+ this.props.lng\r\n        var bounds = new window.google.maps.LatLngBounds()\r\n        var infowindow = new window.google.maps.InfoWindow()\r\n        //markers\r\n        var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n        var markers = this.props.venues.map(function(venue, i) {\r\n            var marker = new window.google.maps.Marker({\r\n                position: {lat:venue.venue.location.lat,lng: venue.venue.location.lng},\r\n                label:labels[i % labels.length],\r\n                map: map\r\n            })\r\n            //infobox\r\n            var directions = \"<a href=https://www.google.com/maps/dir/\"+origin+ \"/\" + venue.venue.location.address +\" target=\\\"_blank\\\">Directions</a>\"\r\n            var contentString = \"<div><h3>\"+ venue.venue.name+\"</h3><p>\"+venue.venue.location.address+ \",\"+venue.venue.location.formattedAddress[1]+\"\\n\" +directions+\"</p></div>\"\r\n            // var infowindow = new window.google.maps.InfoWindow({\r\n            // content: contentString\r\n            // });\r\n            //eventListeners\r\n            window.google.maps.event.addListener(marker, 'click', function(event){\r\n                infowindow.setContent(contentString)\r\n                infowindow.open(map, marker)\r\n            })\r\n            window.google.maps.event.addListener(marker, 'dblclick', function(event){\r\n                this.map.setZoom(20)\r\n                this.map.setCenter(marker.getPosition())\r\n            })\r\n            //recenters\r\n            bounds.extend(marker.getPosition())\r\n            map.fitBounds(bounds)\r\n            return marker\r\n        })\r\n    }\r\n\r\n    loadscript=(url)=>{\r\n        var index = window.document.getElementsByTagName(\"script\")[0]\r\n        var script = window.document.createElement(\"script\")\r\n        script.src = url\r\n        script.async = true\r\n        script.defer = true\r\n        index.parentNode.insertBefore(script, index)\r\n    }\r\n}\r\n\r\nexport default Map;\r\n\r\n        /*var krabbyPatty = {\r\n            url: \"https://keyingredient.blob.core.windows.net/recipe/M4Wu_-ZhnZVGjGWREyzX0PRtc-HZSFWM3L7jctIVaYNw5eW50zHTa-iPwyulscOSa64qPT_Gh6Xevf8qh7up0IDR678\",\r\n            size: new window.google.maps.Size(70,60),\r\n            scaledSize: new window.googlemaps.Size(70,60),\r\n            origin: new window.google.maps.Point(0,0)\r\n\r\n        }*/","import React from \"react\"\r\nimport Place from \"./Place\";\r\nimport Map from \"./Map\";\r\nimport axios from \"axios\";\r\n\r\nclass Places extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            latlong: \"\",\r\n            venues: [],\r\n            query: \"\",\r\n            lat: 0,\r\n            lng: 0,\r\n            locations:[],\r\n            isMap: false\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"Place\">\r\n                    <ul className=\"header\">\r\n                        <form onSubmit={this.handleClick}>\r\n                        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4VdmZk_mf-XHIQ9iPcDGDIv-SuiY9PYlANTeagAP0kWu-t3CMbw\" onClick={this.menu}/>\r\n                            <li>FillMyStomach</li>\r\n                            <input\r\n                                id=\"query\"\r\n                                type=\"text\"\r\n                                placeholder=\"Coffee, sushi, pizza, etc...\"\r\n                                onChange={this.handleChange}\r\n                                autoFocus\r\n                                />\r\n                            <button id=\"submit\">Let's Eat!</button>\r\n                            {this.state.venues.map(venue=>{\r\n                            return <li key={venue.venue.id}>\r\n                            <Place venue={venue.venue} lat={this.state.lat} lng={this.state.lng}/>\r\n                            </li>\r\n                            })}\r\n                        </form>\r\n                    </ul>\r\n                    <Map lat={this.state.lat} lng={this.state.lng} locations={this.state.locations} venues={this.state.venues}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        this.getLocation(); //turn this into a user response\r\n    }\r\n    handleClick=(e)=>{\r\n        e.preventDefault()\r\n        this.setState({locations:[]})\r\n        this.getVenues(this.state.query)\r\n        this.getNearby(this.state.query)\r\n    }\r\n    handleChange=(event)=>{\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            query:event.target.value\r\n        })\r\n    }\r\n    getLocation = () => {\r\n        navigator.geolocation.getCurrentPosition(response => {\r\n            console.log(response.coords)\r\n            this.setState({\r\n                latlong: response.coords.latitude + \", \" + response.coords.longitude,\r\n                lat:response.coords.latitude,\r\n                lng:response.coords.longitude\r\n            })\r\n        })\r\n    }\r\n    getVenues = (query) => {\r\n        const endpoint = \"https://api.foursquare.com/v2/venues/explore?\"\r\n        const params = {\r\n            client_id: \"MBDW52IQNZDUMKO4LXYXNLDGNNSAEBY4KMGNTSHCNKPO1ZXQ\",\r\n            client_secret: \"Y2DLAVALWAYU5TYZUIORUPN21HRNZPQGO0VVOWN15REYC4OB\",\r\n            ll: this.state.latlong,\r\n            query: query,\r\n            v:\"20190101\",\r\n            limit: 5,\r\n            openNow: 1\r\n        }\r\n        axios.get(endpoint + new URLSearchParams(params))\r\n        .then(response => {\r\n            console.log(response.data.response.groups[0].items)\r\n            this.setState({\r\n                venues: response.data.response.groups[0].items\r\n            }) //end out setState\r\n        })\r\n        .then(response => {\r\n            this.logLocations()\r\n            this.setState({\r\n                isMap: true\r\n            })\r\n        })\r\n    }\r\n    getNearby=(query)=>{\r\n        const endpoint = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\"\r\n        const params = {\r\n            location: this.state.latlong,\r\n            opennow: true,\r\n            key: \"AIzaSyCn5XAF4sSSjnjEVvWd8yB-nAyG8YOIb0o\",\r\n            radius: 2000,\r\n            type: 'restaurant',\r\n            query: query\r\n        }\r\n        axios.get(endpoint +new URLSearchParams(params))\r\n        .then(response =>{\r\n            console.log(response)\r\n        })\r\n    }\r\n    logLocations=()=>{\r\n        this.state.venues.map(venue=>{\r\n          return this.setState({\r\n                locations: this.state.locations.concat({lat:venue.venue.location.lat, lng:venue.venue.location.lng})\r\n            })\r\n        })\r\n    }\r\n    menu(){\r\n        console.log(\"works\")\r\n        \r\n    }\r\n}\r\n\r\nexport default Places","import React, { Component } from 'react';\nimport Places from \"./Places\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Places />\n      </div>\n    );\n  }\n  componentDidMount(){\n    this.loadScript()\n  }\n\n  loadScript=()=>{\n    var index = window.document.getElementsByTagName(\"link\")[0]\n    var link = window.document.createElement(\"link\")\n    link.href = \"https://fonts.googleapis.com/css?family=Acme\"\n    link.rel = \"stylesheet\" \n    index.parentNode.insertBefore(link, index)\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}